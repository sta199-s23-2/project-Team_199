[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Team member 1: Luke Francese, Public Policy Studies, class of 2025\nTeam member 2: Ruben Mesalles, Political Science, class of 2025\nTeam member 3: Ella Davis, Public Policy Studies, class of 2025\nTeam member 4: Amalia Desir, Neuroscience, class of 2025"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Team 199: Olympics",
    "section": "",
    "text": "olympics_new <- olympics |> \n  mutate(BMI = (Weight/(Height/100)^2), medalyesno = if_else(is.na(Medal), \"no\", \"yes\"))\n\nolympics_new <- as.data.frame(olympics_new)\n\n\nolympics_new |> \n  filter(Sport == \"Swimming\",\n         medalyesno == \"yes\",\n         Year > 1999) |>\n  mutate(medal = as.factor(Medal),\n         medal = fct_relevel(Medal, \"Gold\", \n                             \"Silver\", \"Bronze\")) |>\n  ggplot(aes(x = Team, fill = medal)) + \n    geom_bar() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) \n\n\n\nolympics_new |> \n  filter(Sport == \"Swimming\",\n         Year > 1999,\n         Team == c(\"Australia\", \"China\", \"France\",\n                   \"Germany\", \"Japan\", \"Netherlands\",\n                   \"United States\")) |>\n  mutate(medal = as.factor(Medal),\n         medal = fct_relevel(Medal, \"Gold\", \n                             \"Silver\", \"Bronze\")) |>\n  ggplot(aes(x = Team, fill = medal)) + \n    geom_bar() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  facet_wrap(~Sex)\n\nWarning in Team == c(\"Australia\", \"China\", \"France\", \"Germany\", \"Japan\", :\nlonger object length is not a multiple of shorter object length\n\n\n\n\n\n\nolympics_new |> \n  filter(Sport == \"Swimming\", Year > 1999) |>\n  mutate(medal = as.factor(Medal), medal = fct_relevel(Medal, \"Gold\", \"Silver\", \"Bronze\")) |>\n  ggplot(aes(x = BMI, y = medal)) + \n    geom_boxplot() + \n  facet_wrap(~Sex)\n\nWarning: Removed 117 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\nolympics_new |> \n  filter(Sport == \"Swimming\", Year > 1999) |>\n  mutate(medal = as.factor(Medal), medal = fct_relevel(Medal, \"Gold\", \"Silver\", \"Bronze\")) |>\n  ggplot(aes(x = Height, y = medal)) + \n    geom_boxplot() + \n  facet_wrap(~Sex)\n\nWarning: Removed 101 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\nolympics_new |> \n  filter(Sport == \"Swimming\", Year > 1999) |>\n  mutate(medal = as.factor(Medal), medal = fct_relevel(Medal, \"Gold\", \"Silver\", \"Bronze\")) |>\n  ggplot(aes(x = Weight, y = medal)) + \n    geom_boxplot() + \n  facet_wrap(~Sex)\n\nWarning: Removed 112 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\nolympics_new |> \n  filter(Sport == \"Swimming\", Year > 1999) |>\n  mutate(medal = as.factor(Medal), medal = fct_relevel(Medal, \"Gold\", \"Silver\", \"Bronze\")) |>\n  ggplot(aes(x = Age, y = medal)) + \n    geom_boxplot() + \n  facet_wrap(~Sex) + labs(title = \"Male and Female Age vs. Medal Earned\",\n                          x = \"Type of Medal Earned\", y = \"Age of Athlete\")\n\n\n\n\n\nathlete_count_by_medal_status <- olympics |>\n  summarise(count = n())\n\n\nolympians_per_team <- olympics |>\n  group_by(Team) |>\n  summarise(count = n()) |>\n  arrange(desc(count))\n\n\nN <- 20\ntop_n_teams <- olympians_per_team[1:N, ]\n\n\nggplot(top_n_teams, aes(x = Team, y = count)) +\n  geom_col() + \n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  labs(title = \"Number of Olympians per Team (Top 20)\",\n       x = \"Team\",\n       y = \"Number of Olympians\")\n\n\n\n\n\nolympians_per_games <- olympics |>\n  group_by(Games) |>\n  summarise(count = n()) |>\n  arrange(Games) \n\nggplot(olympians_per_games, aes(x = Games, y = count)) +\n  geom_col() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  labs(title = \"Number of Olympians per Olympic Games\",\n       x = \"Olympic Games\",\n       y = \"Number of Olympians\") \n\n\n\n\n\nolympians_per_sport <- olympics |>\n  group_by(Sport) |>\n  summarise(count = n()) |>\n  arrange(desc(count))\n\nggplot(olympians_per_sport, aes(x = Sport, y = count)) +\n  geom_col() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  labs(title = \"Number of Olympians per Sport\",\n       x = \"Sport\",\n       y = \"Number of Olympians\")\n\n\n\n\n\nN <- 10\n\nolympians_per_sport <- olympics |>\n  group_by(Sport) |>\n  summarise(count = n()) |>\n  arrange(desc(count)) |>\n  slice_head(n = N)\n\nggplot(olympians_per_sport, aes(x = Sport, y = count)) +\n  geom_col() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  labs(title = \"Number of Olympians for the Most Popular Sports (Top 10)\",\n       x = \"Sport\",\n       y = \"Number of Olympians\")\n\n\n\n\n\nolympics_new |> \n  filter(Sport == \"Swimming\", Medal == \"Gold\", Year > 1999) |>\n  ggplot(aes(x = Team)) + \n    geom_bar() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) + labs(title = \"Swimming Gold Medals Recieved per Country\", x = \"Country\", y = \"Number of Gold Medals\")"
  },
  {
    "objectID": "proposal.html",
    "href": "proposal.html",
    "title": "Project Proposal - Team 199",
    "section": "",
    "text": "library(tidyverse)"
  },
  {
    "objectID": "proposal.html#introduction-and-data",
    "href": "proposal.html#introduction-and-data",
    "title": "Project Proposal - Team 199",
    "section": "Introduction and data",
    "text": "Introduction and data\n\nIdentify the source of the data.\n\nFor this project proposal, we will be exploring County Demographics. The source of this dataset is from the CORGIS Dataset Project, specifically by Ryan Whitcomb, Joung Min Choi, and Bo Guan.\n\nState when and how it was originally collected (by the original data curator, not necessarily how you found the data).\n\nThis dataset was originally collected from 2010 to 2019 by the United States Census Bureau, which individually surveys all residents of the United States.\n\nWrite a brief description of the observations.\n\nThe observations describe the “age distributions, the education levels, employment statistics, ethnicity percents, household information, income, and other miscellaneous statistics” of all U.S. counties from 2010 to 2019."
  },
  {
    "objectID": "proposal.html#research-question",
    "href": "proposal.html#research-question",
    "title": "Project Proposal - Team 199",
    "section": "Research question",
    "text": "Research question\n\nA well formulated research question. (You may include more than one research question if you want to receive feedback on different ideas for your project. However, one per data set is required.)\nA description of the research topic along with a concise statement of your hypotheses on this topic.\nIdentify the types of variables in your research question. Categorical? Quantitative?"
  },
  {
    "objectID": "proposal.html#literature",
    "href": "proposal.html#literature",
    "title": "Project Proposal - Team 199",
    "section": "Literature",
    "text": "Literature\n\nFind one published credible article on the topic you are interested in researching.\nProvide a one paragraph summary about the article.\nIn 1-2 sentences, explain how your research question builds on / is different than the article you have cited."
  },
  {
    "objectID": "proposal.html#glimpse-of-data",
    "href": "proposal.html#glimpse-of-data",
    "title": "Project Proposal - Team 199",
    "section": "Glimpse of data",
    "text": "Glimpse of data\n\ncounty_demographics <- readr::read_csv('https://think.cs.vt.edu/corgis/datasets/csv/county_demographics/county_demographics.csv')\n\nRows: 3139 Columns: 43\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): County, State\ndbl (41): Age.Percent 65 and Older, Age.Percent Under 18 Years, Age.Percent ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n# add glimpse. the glimpse will not run with the current code \n\n# add code here"
  },
  {
    "objectID": "proposal.html#introduction-and-data-1",
    "href": "proposal.html#introduction-and-data-1",
    "title": "Project Proposal - Team 199",
    "section": "Introduction and data",
    "text": "Introduction and data\n\nIdentify the source of the data.\n\nFor this project we will be exploring English Premier League Football data. The source of this data comes from Organization called Football.CSV which explores football data from all over the world.\n\nState when and how it was originally collected (by the original data curator, not necessarily how you found the data).\n\nThe data was collected by recording every game that every team in the Premier League played over the past 30 years.\n\nWrite a brief description of the observations.\n\nThe observation describe “Date, Round number, FT score, Team 1, Team 2, Standing Position”, for every game played in the Premier League from 2010-2019."
  },
  {
    "objectID": "proposal.html#research-question-1",
    "href": "proposal.html#research-question-1",
    "title": "Project Proposal - Team 199",
    "section": "Research question",
    "text": "Research question\n\nA well formulated research question. (You may include more than one research question if you want to receive feedback on different ideas for your project. However, one per data set is required.)\nA description of the research topic along with a concise statement of your hypotheses on this topic.\nIdentify the types of variables in your research question. Categorical? Quantitative?"
  },
  {
    "objectID": "proposal.html#literature-1",
    "href": "proposal.html#literature-1",
    "title": "Project Proposal - Team 199",
    "section": "Literature",
    "text": "Literature\n\nFind one published credible article on the topic you are interested in researching.\nProvide a one paragraph summary about the article.\nIn 1-2 sentences, explain how your research question builds on / is different than the article you have cited."
  },
  {
    "objectID": "proposal.html#glimpse-of-data-1",
    "href": "proposal.html#glimpse-of-data-1",
    "title": "Project Proposal - Team 199",
    "section": "Glimpse of data",
    "text": "Glimpse of data\n\nflights <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-07-12/flights.csv')\n\nRows: 688099 Columns: 14\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (6): MONTH_NUM, MONTH_MON, APT_ICAO, APT_NAME, STATE_NAME, Pivot Label\ndbl  (7): YEAR, FLT_DEP_1, FLT_ARR_1, FLT_TOT_1, FLT_DEP_IFR_2, FLT_ARR_IFR_...\ndttm (1): FLT_DATE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "proposal.html#introduction-and-data-2",
    "href": "proposal.html#introduction-and-data-2",
    "title": "Project Proposal - Team 199",
    "section": "Introduction and data",
    "text": "Introduction and data\n\nThe data is a cleaned dataset created by a user on Kaggle (https://www.kaggle.com/datasets/heesoo37/120-years-of-olympic-history-athletes-and-results)\nThe original source of the data is http://www.sports-reference.com/, which has a compilation of data from the Olympic games over the years.\nThe dataset has observations for each athlete competing in an event, and it has variables such as team, age, sex, and sport."
  },
  {
    "objectID": "proposal.html#research-question-2",
    "href": "proposal.html#research-question-2",
    "title": "Project Proposal - Team 199",
    "section": "Research question",
    "text": "Research question\n\nWhich Olympic skiing event’s results can best be predicted by athletes’ characteristics, such as nationality, sex, weight, and height?\nThis research topic will explore which Olympic skiing victories are the most predictable based on the characteristics of competitors. This question could be important in knowing which events are the most predictable, and which may be more contested, which could guide coverage of the events. We predict that the events that tend to be dominated by one country, such as freestyle skiing (dominated by Canada) will have the best predictive models.\nThe question involves categorical variables such as event, country, sex, and medal, as well as quantitative variables such as height and weight."
  },
  {
    "objectID": "proposal.html#literature-2",
    "href": "proposal.html#literature-2",
    "title": "Project Proposal - Team 199",
    "section": "Literature",
    "text": "Literature\n\nhttps://pietistschoolman.com/2014/02/21/which-country-dominates-which-olympic-sport-winter-edition/\nThe article shows the most dominated winter Olympic sports, broken down both by country and continent. This provides a decent basis to form a hypothesis, as particularly dominated sports may be more easily predicted than tossup sports. The article also suggests that continent, and not just country, could be a basis to sort athletes in order to predict results.\nThe article does not go into depth regarding whether any of the events can be predicted year-to-year, so it can easily be expanded on."
  },
  {
    "objectID": "proposal.html#glimpse-of-data-2",
    "href": "proposal.html#glimpse-of-data-2",
    "title": "Project Proposal - Team 199",
    "section": "Glimpse of data",
    "text": "Glimpse of data\n\nolympics <- read.csv(\"data/olympics.csv\") \nglimpse(olympics)\n\nRows: 271,116\nColumns: 15\n$ ID     <int> 1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, …\n$ Name   <chr> \"A Dijiang\", \"A Lamusi\", \"Gunnar Nielsen Aaby\", \"Edgar Lindenau…\n$ Sex    <chr> \"M\", \"M\", \"M\", \"M\", \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"M\", \"M\", \"M\"…\n$ Age    <int> 24, 23, 24, 34, 21, 21, 25, 25, 27, 27, 31, 31, 31, 31, 33, 33,…\n$ Height <int> 180, 170, NA, NA, 185, 185, 185, 185, 185, 185, 188, 188, 188, …\n$ Weight <dbl> 80, 60, NA, NA, 82, 82, 82, 82, 82, 82, 75, 75, 75, 75, 75, 75,…\n$ Team   <chr> \"China\", \"China\", \"Denmark\", \"Denmark/Sweden\", \"Netherlands\", \"…\n$ NOC    <chr> \"CHN\", \"CHN\", \"DEN\", \"DEN\", \"NED\", \"NED\", \"NED\", \"NED\", \"NED\", …\n$ Games  <chr> \"1992 Summer\", \"2012 Summer\", \"1920 Summer\", \"1900 Summer\", \"19…\n$ Year   <int> 1992, 2012, 1920, 1900, 1988, 1988, 1992, 1992, 1994, 1994, 199…\n$ Season <chr> \"Summer\", \"Summer\", \"Summer\", \"Summer\", \"Winter\", \"Winter\", \"Wi…\n$ City   <chr> \"Barcelona\", \"London\", \"Antwerpen\", \"Paris\", \"Calgary\", \"Calgar…\n$ Sport  <chr> \"Basketball\", \"Judo\", \"Football\", \"Tug-Of-War\", \"Speed Skating\"…\n$ Event  <chr> \"Basketball Men's Basketball\", \"Judo Men's Extra-Lightweight\", …\n$ Medal  <chr> NA, NA, NA, \"Gold\", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…"
  },
  {
    "objectID": "report.html",
    "href": "report.html",
    "title": "Team 199: Olympics",
    "section": "",
    "text": "Research question & Data\nWhich traits can best predict Olympic swimmers’ performance (between nationality, height, weight, age, and BMI)?\nThe data is a cleaned dataset created by a user on Kaggle (https://www.kaggle.com/datasets/heesoo37/120-years-of-olympic-history-athletes-and-results), and it originated from http://www.sports-reference.com/, which has a compilation of data from the Olympic games over the years. The dataset has observations for each athlete competing, and it has variables such as team, age, sex, and sport. For each column, the brief definitions are as follows:\n\nID - Unique number for each athlete\nName - Athlete’s name\nSex - M or F\nAge - Integer\nHeight - In centimeters\nWeight - In kilograms\nTeam - Team name\nNOC - National Olympic Committee 3-letter code\nGames - Year and season\nYear - Integer\nSeason - Summer or Winter\nCity - Host city\nSport - Sport\nEvent - Event\nMedal - Gold, Silver, Bronze, or NA\n\n\n\nLiterature\n  One published credible article on the topic that we are interested in researching is an article published by Swimming World Magazine, a US-based monthly swimming magazine that was first published in January 1960. It concurrently runs online websites Swimming World Magazine and Swimming World News, and the headquarters is in Phoenix, Arizona. The particular article that applies to our research is their March 2023 article, \"What Makes the Perfect Swimmer’s Body?\". \n  Since our research is seeking the physical traits that have the strongest correlation with successful swimmer performance, this article acts as a foundation for our inspiration and our hypothesis. \n  In this article, the author JP Mortenson, an alumnus of Dartmouth's swimming and diving team and a physical therapist for professional swimmers, lists traits that many professional and Olympic swimmers have that have aided in their past athletic successes. \n  One of these traits is height, which is also found in our data set. JP claims hat height tends to give swimmers a distinct advantage in the pool, as made apparent by elite international male and female swimmers such as Nathan Adrian (6'6), Kilment Kolesnikov(6'5), Michael Andrew (6'5), Sarah Sjostrom (6'0), Olympic gold medalist Simone Manuel (5'11), and Olympic gold medalist Katie Ledeckey (5'11). The author even goes on to state that the average height of the 2016 Olympic finalists in Rio was 6'2 for men and 5'9 for women, which is 5 inches above the global average male and female heights respectively (worlddata.info and ourworldindata.org). Other traits that seem to lead to athletic success in the sector of swimming that were listed in this article include anthropometry, center of mass, flexibility, hyperextension abilities, and mental strength. \n  Our research question, \"Which trait ultimately affects Olympic swimmers' performance the most?\" builds upon this article because it would lend more concrete statistical evidence to many observed correlations such as height. Although this article provides evidence to its claims by citing corresponding examples of athletes, our research question will be able to build upon these claims by calling more physical traits into question, and specific swimming events in which these traits have the strongest correlations with success. \n  Article: https://www.swimmingworldmagazine.com/news/what-makes-the-perfect-swimmers-body/\n  \n\n\nMethodology\nThe differences between swimmers are best shown through data visualization. The data was filtered to show only results from the 2000 Summer games and the years since, to make it more applicable to modern games. The relationship between national origin and medal results was shown in two ways: a first plot shows how many swimming medals of each kind had gone to each country, while the second plot shows the proportion of competitors from the top seven countries\n\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   1.0.0 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(tidymodels)\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.0.0 ──\n✔ broom        1.0.2     ✔ rsample      1.1.1\n✔ dials        1.1.0     ✔ tune         1.0.1\n✔ infer        1.0.4     ✔ workflows    1.1.2\n✔ modeldata    1.0.1     ✔ workflowsets 1.0.0\n✔ parsnip      1.0.3     ✔ yardstick    1.1.0\n✔ recipes      1.0.3     \n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n• Search for functions across packages at https://www.tidymodels.org/find/\n\nlibrary(lubridate)\n\nLoading required package: timechange\n\nAttaching package: 'lubridate'\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n\nolympics <- read.csv(\"data/olympics.csv\") \n\nolympics_new <- olympics |> \n  mutate(BMI = (Weight/(Height/100)^2), medalyesno = if_else(is.na(Medal), \"no\", \"yes\"))\n\nolympics_new <- as.data.frame(olympics_new)\n\n\nolympics_new |> \n  filter(Sport == \"Swimming\",\n         medalyesno == \"yes\",\n         Year > 1999) |>\n  mutate(medal = as.factor(Medal),\n         medal = fct_relevel(Medal, \"Gold\", \n                             \"Silver\", \"Bronze\")) |>\n  ggplot(aes(x = Team, fill = medal)) + \n    geom_bar() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) \n\n\n\nolympics_new |> \n  filter(Sport == \"Swimming\",\n         Year > 1999,\n         Team == c(\"Australia\", \"China\", \"France\",\n                   \"Germany\", \"Japan\", \"Netherlands\",\n                   \"United States\")) |>\n  mutate(medal = as.factor(Medal), \n         medal = if_else(str_detect(medal, \"NA\"), \"No Medal\", \"olympics_new\"),\n         medal = fct_relevel(Medal, \"Gold\", \"Silver\", \"Bronze\", \"No Medal\")) |>\n  ggplot(aes(x = Team, fill = medal)) + \n    geom_bar(position = \"fill\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\n  facet_wrap(~Sex) \n\nWarning in Team == c(\"Australia\", \"China\", \"France\", \"Germany\", \"Japan\", :\nlonger object length is not a multiple of shorter object length\n\n\nWarning: 1 unknown level in `f`: No Medal\n\n\n\n\n\n\nolympics_new |> \n  filter(Sport == \"Swimming\", Year > 1999) |>\n  mutate(medal = as.factor(Medal), medal = fct_relevel(Medal, \"Gold\", \"Silver\", \"Bronze\")) |>\n  ggplot(aes(x = BMI, y = medal)) + \n    geom_boxplot() + \n  facet_wrap(~Sex) + \n  labs(title = \"BMI vs. Medal Earned\", \n       subtitle = \"for Women and Men\",\n       x = \"BMI of Athlete\", \n       y = \"Type of Medal Earned\")\n\nWarning: Removed 117 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\nolympics_new |> \n  filter(Sport == \"Swimming\", Year > 1999) |>\n  mutate(medal = as.factor(Medal), medal = fct_relevel(Medal, \"Gold\", \"Silver\", \"Bronze\")) |>\n  ggplot(aes(x = Height, y = medal)) + \n    geom_boxplot() + \n  facet_wrap(~Sex) + \n  labs(title = \"Height vs. Medal Earned\", \n       subtitle = \"for Women and Men\",\n       x = \"Height of Athlete (cm)\", \n       y = \"Type of Medal Earned\")\n\nWarning: Removed 101 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\nolympics_new |> \n  filter(Sport == \"Swimming\", Year > 1999) |>\n  mutate(medal = as.factor(Medal), medal = fct_relevel(Medal, \"Gold\", \"Silver\", \"Bronze\")) |>\n  ggplot(aes(x = Weight, y = medal)) + \n    geom_boxplot() + \n  facet_wrap(~Sex) + \n  labs(title = \"Weight vs. Medal Earned\", \n       subtitle = \"for Women and Men\",\n       x = \"Weight of Athlete (Kg)\", \n       y = \"Type of Medal Earned\")\n\nWarning: Removed 112 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\nolympics_new |> \n  filter(Sport == \"Swimming\", Year > 1999) |>\n  mutate(medal = as.factor(Medal), medal = fct_relevel(Medal, \"Gold\", \"Silver\", \"Bronze\")) |>\n  ggplot(aes(x = Age, y = medal)) + \n    geom_boxplot() + \n  facet_wrap(~Sex) + \n  labs(title = \"Age vs. Medal Earned\", \n       subtitle = \"for Women and Men\",\n       x = \"Age of Athlete\", \n       y = \"Type of Medal Earned\")\n\n\n\n\n\n\nResults"
  }
]